#!/bin/bash

# Generated by perl modules
# App::Spec v0.010
# App::Spec::Bash v0.000
# mydemo - Demo

declare OPT_VERSION
declare OPT_HELP
declare OPT_ALL
declare OPT_FLAG_A
declare OPT_FLAG_B
declare OPT_FLAG_C
declare OPT_TEST_D
declare OPT_TEST_E
declare OPT_TEST_F
declare OPT_TEST_G

declare OP=
declare -a ERRORS=()

DEBUG=false
[[ -n "$APPSPEC_BASH_DEBUG" ]] && DEBUG=true

APPSPEC.run() {
  APPSPEC.parse $@
  if (( ${#ERRORS[*]} > 0 )); then
    debug "ERRORS: (${ERRORS[*]})"
  else
    debug "OP: $OP"
    MyDemo.$OP
  fi
}

APPSPEC.parse() {
  local argv=($@)
  debug "ARGV: ${argv[*]}"
    declare -g OPT_VERSION=false
    declare -g OPT_HELP=false

  while [[ ${#argv} > 0 ]]; do
    debug "processing ${argv[0]}..."
    case "${argv[0]}" in
    --version)
        debug "LONG OPTION version"
        OPT_VERSION=true
        shift_arg

    ;;
    --help)
        debug "LONG OPTION help"
        OPT_HELP=true
        shift_arg

    ;;
    --*)
        debug "!UNKNOWN OPTION ${argv[0]}"
        ERRORS+=("unknown option ${argv[0]}")
        shift_arg
        break
    ;;

    -*)
      local i arg=${argv[0]/-/}
      for (( i=0; i < "${#arg}"; i++ )); do
        local char="${arg:$i:1}"
        debug "processing short $char"
        case "$char" in
        V)
            debug "SHORT OPTION version"
            OPT_VERSION=true

        ;;
        h)
            debug "SHORT OPTION help"
            OPT_HELP=true

        ;;
        *)
          debug "!UNKNOWN option -$char"
          ERRORS+=("unknown option -$char")
          shift_arg
          break
        ;;
        esac
      done
      if (( $i == ${#arg} )); then
        shift_arg
      fi

    ;;

    # SUBCOMMANDS
    _meta)
      debug COMMAND _meta

      shift_arg
      OP=
      while [[ ${#argv} > 0 ]]; do
        case "${argv[0]}" in

        -*)

        ;;
        *)

          shift_arg
        ;;
        esac
      done

      break
    ;;
    help)
      debug COMMAND help
          declare -g OPT_ALL=false

      shift_arg
      OP=cmd_help
      while [[ ${#argv} > 0 ]]; do
        case "${argv[0]}" in
          --all)
              debug "LONG OPTION all"
              OPT_ALL=true
              shift_arg

          ;;
          --*)
              debug "!UNKNOWN OPTION ${argv[0]}"
              ERRORS+=("unknown option ${argv[0]}")
              shift_arg
              break
          ;;

        -*)
            local i arg=${argv[0]/-/}
            for (( i=0; i < "${#arg}"; i++ )); do
              local char="${arg:$i:1}"
              debug "processing short $char"
              case "$char" in
              *)
                debug "!UNKNOWN option -$char"
                ERRORS+=("unknown option -$char")
                shift_arg
                break
              ;;
              esac
            done
            if (( $i == ${#arg} )); then
              shift_arg
            fi

        ;;
        *)

          shift_arg
        ;;
        esac
      done

      break
    ;;
    test1)
      debug COMMAND test1
          declare -g OPT_FLAG_A=false
          declare -g OPT_FLAG_B=false
          declare -g -i OPT_FLAG_C=0
          declare -g OPT_TEST_D=
          declare -g OPT_TEST_E=
          declare -g -a OPT_TEST_F=()
          declare -g OPT_TEST_G=

      shift_arg
      OP=test1
      while [[ ${#argv} > 0 ]]; do
        case "${argv[0]}" in
          --flag-a)
              debug "LONG OPTION flag-a"
              OPT_FLAG_A=true
              shift_arg

          ;;
          --flag-b)
              debug "LONG OPTION flag-b"
              OPT_FLAG_B=true
              shift_arg

          ;;
          --flag-c)
              debug "LONG OPTION flag-c"
              OPT_FLAG_C+=1
              shift_arg

          ;;
          --test-d)
              debug "LONG OPTION test-d"
              shift_arg
              OPT_TEST_D="${argv[0]}"
              shift_arg

          ;;
          --test-e)
              debug "LONG OPTION test-e"
              shift_arg
              OPT_TEST_E="${argv[0]}"
              shift_arg

          ;;
          --test-f)
              debug "LONG OPTION test-f"
              shift_arg
              OPT_TEST_F+=("${argv[0]}")
              shift_arg

          ;;
          --test-g)
              debug "LONG OPTION test-g"
              shift_arg
              OPT_TEST_G="${argv[0]}"
              shift_arg

          ;;
          --*)
              debug "!UNKNOWN OPTION ${argv[0]}"
              ERRORS+=("unknown option ${argv[0]}")
              shift_arg
              break
          ;;

        -*)
            local i arg=${argv[0]/-/}
            for (( i=0; i < "${#arg}"; i++ )); do
              local char="${arg:$i:1}"
              debug "processing short $char"
              case "$char" in
              a)
                  debug "SHORT OPTION flag-a"
                  OPT_FLAG_A=true

              ;;
              b)
                  debug "SHORT OPTION flag-b"
                  OPT_FLAG_B=true

              ;;
              c)
                  debug "SHORT OPTION flag-c"
                  OPT_FLAG_C+=1

              ;;
              d)
                  debug "SHORT OPTION test-d"
          if (( $i+1 == ${#arg} )); then
            shift_arg
            OPT_TEST_D="${argv[0]}"
          else
            OPT_TEST_D="${arg:$i+1}"
          fi
#                  OPT_TEST_D="${arg:$i+1}"
                  shift_arg
                  break

              ;;
              e)
                  debug "SHORT OPTION test-e"
          if (( $i+1 == ${#arg} )); then
            shift_arg
            OPT_TEST_E="${argv[0]}"
          else
            OPT_TEST_E="${arg:$i+1}"
          fi
#                  OPT_TEST_E="${arg:$i+1}"
                  shift_arg
                  break

              ;;
              f)
                  debug "SHORT OPTION test-f"
          if (( $i+1 == ${#arg} )); then
            shift_arg
            OPT_TEST_F+=("${argv[0]}")
          else
            OPT_TEST_F+=("${arg:$i+1}")
          fi
#                  OPT_TEST_F+=("${arg:$i+1}")
                  shift_arg
                  break

              ;;
              g)
                  debug "SHORT OPTION test-g"
          if (( $i+1 == ${#arg} )); then
            shift_arg
            OPT_TEST_G="${argv[0]}"
          else
            OPT_TEST_G="${arg:$i+1}"
          fi
#                  OPT_TEST_G="${arg:$i+1}"
                  shift_arg
                  break

              ;;
              *)
                debug "!UNKNOWN option -$char"
                ERRORS+=("unknown option -$char")
                shift_arg
                break
              ;;
              esac
            done
            if (( $i == ${#arg} )); then
              shift_arg
            fi

        ;;
        *)

          shift_arg
        ;;
        esac
      done

      break
    ;;
      *)
      debug "UNKNOWN cmd ${argv[0]}"
      ERRORS+=("unknown subcommand ${argv[0]}")
      shift_arg
      return
      ;;


    esac
  done

  debug "ARGV: ${argv[*]}"
}

shift_arg() {
    argv=("${argv[@]:1}")
}

debug() {
  $DEBUG && echo $@
}
